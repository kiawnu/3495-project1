services:
  node-app:
    build:
      context: ./enter_data  
      dockerfile: Dockerfile  
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - mysql
      - auth-app
    env_file:
      - .env
    environment:
      NODE_ENV: development
    networks:
      - app-network
  show-app:
    build:
      context: ./show_results
      dockerfile: Dockerfile
    image: show_results_app
    ports:
      - "3300:3300"
    restart: always
    depends_on:
      - mongodb
      - auth-app
    env_file:
      - .env
    environment:
      NODE_ENV: development
    networks:
      - app-network
  auth-app:
    build: 
      context: ./authentication
      dockerfile: Dockerfile
    image: auth_app
    ports:
      - "3200:3200"
    restart: always
    env_file:
      - .env
    environment:
      NODE_ENV: development
    networks:
      - app-network
  mysql: 
    image: mysql:latest
    restart: always
    volumes:
      - db_data:/var/lib/mysql
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - '4444:3306'
    env_file:
      - .env 
    networks:
      - app-network
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
      - ./init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - app-network
  analyzer:
    build:
      context: ./analytics
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - mongodb
      - mysql
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  mongo-data:
  mongo-config:

